#*********************************************************************
#   INCLUDES
#*********************************************************************

#*********************************************************************
#   GLOBAL CONSTANTS
#*********************************************************************

#*********************************************************************
#   LOCAL CONSTANTS
#*********************************************************************

local INC_DIR = ./include ;

#*********************************************************************
#   PROJECT
#*********************************************************************
project KRNL : requirements <include>$(INC_DIR) ;

#*********************************************************************
#   TARGETS
#*********************************************************************

alias ARCH
    :
    /ARCH/I386//ARCH
    :
    <architecture>x86
    ;

exe kernel_bin
    :
    # Sources
    /ARCH/I386//CRT_START

    ARCH
    kernel/kernel.c
    
    /ARCH/I386//CRT_END

    [ lib k ]
    :
    # Requirements
    <architecture>x86:<linkscript>/ARCH/I386//linker.ld
    <define>__is_kernel
    <dependency>/LIBC//install # Required for access to headers since we use angled includes.
    ;
explicit kernel_bin ;


#-----------------------------------------------------------
# Make OS iso.
#-----------------------------------------------------------
make myos.iso : kernel_bin : @makeiso ;
actions makeiso
{

}
explicit myos.iso ;

#-----------------------------------------------------------
# Install files in the SYS ROOT
#-----------------------------------------------------------
install install_headers
    :
    [ glob-tree *.h : vga.h ]
    :
    <location>$(ABS_SYS_INC_DIR)
    <install-source-root>$(INC_DIR)
    ;
explicit install_headers ;

install install_kernel
    :
    kernel_bin
    :
    <location>$(ABS_SYS_BOOT_DIR)
    ;
explicit install_kernel ;

alias install 
    :
    install_headers
    install_kernel
    ;
explicit install ;